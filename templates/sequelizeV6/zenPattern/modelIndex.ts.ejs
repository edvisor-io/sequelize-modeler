<%_
setOutputFileName('server/sequelize/models/index.ts')
const quote = getQuote()
-%>
// <%= quote.text %> - <%= quote.author %>
// Generated: <%= new Date().toLocaleDateString()  %>

import * as path from 'path'
import {
  Model,
  Sequelize
} from 'sequelize'

import { eachFileInDir } from '../../utils'
import { AppSchema } from '../schema'
<%_
tables.forEach((table) => {
  const modelName = include('_partials/modelNames.ejs', { modelName: changeCase.pascalCase(table.name) }) -%>
import { <%= modelName %>Ctor } from './<%= changeCase.paramCase(modelName) %>'
<%_ }) -%>

export function initAllModels(sequelize: Sequelize) {
  eachFileInDir(__dirname, file => {
    const modelFilePath = path.resolve(__dirname, file)
    const model: typeof Model = require(modelFilePath).default
   
    const schemaFilePath = path.resolve(__dirname, '..', 'schema', file)
    const { init }: AppSchema<typeof Model> = require(schemaFilePath).schema

    init(sequelize, model)
  })
}

export function initAllAssociations(models: SequelizeModels) {
  eachFileInDir(__dirname, file => {
    const schemaFilePath = path.resolve(__dirname, '..', 'schema', file)
    const { associate }: AppSchema<typeof Model> = require(schemaFilePath).schema

    associate(models)
  })
}


export type SequelizeModels = {
  <%_ tables.forEach(table => {
    const modelName = include('_partials/modelNames.ejs', { modelName: changeCase.pascalCase(table.name) }) -%>
  <%= modelName %>: <%= modelName %>Ctor
  <%_ }) -%>
}

<%_ tables.forEach(table => {
  const modelName = include('_partials/modelNames.ejs', { modelName: changeCase.pascalCase(table.name) }) -%>
export type { default as <%= modelName %> } from './<%= changeCase.paramCase(modelName) %>'
<%_ }) -%>